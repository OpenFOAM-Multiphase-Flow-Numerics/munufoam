/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.1                                 |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
	location		"system";
    object          controlDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interfaceAdvector;

startFrom       latestTime;

startTime       0.0;

stopAt          endTime;

endTime         3.0;

writeControl    adjustableRunTime;

writeInterval   1.5;

deltaT          0.0005;

purgeWrite      0;

writeFormat     ascii;

writePrecision  14;

writeCompression no;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           1e10;
maxAlphaCo      0.5;

maxDeltaT       0.05;

profiling
{
    active      true;
    cpuInfo     false;
    memInfo     false;
    sysInfo     false;
}

functions
{
	volumeFractionError
	{
		type volumeFractionError;
		libs ("libpostProcess.so");
		field alpha.water;
		functionType    sphere;
		radius      0.15;
		origin      (0.5 0.75 0.25);
		centre      (0.5 0.75 0.25);
		writeControl    adjustableRunTime;
		writeInterval   1.5;
		writePrecision 	3;
	}

	freeSurface
    {
        type            surfaces;
        libs            (sampling postProcess);
        interpolationScheme cell;
		writeControl    adjustableRunTime;
		writeInterval   1.5;
        surfaceFormat   vtp;
        fields
        (
            alpha.water
        );
        surfaces
        (
            freeSurface
            {
                type        isoSurface;
                isoField    alpha.water;
                isoValue    0.5;
                interpolate true;
                regularise  true;
            }

            // PLIC
            // {
            //     type        interface;
            //     interpolate false;
            //     regularise  false;
            // }
        );
    }



}



// ************************************************************************* //
